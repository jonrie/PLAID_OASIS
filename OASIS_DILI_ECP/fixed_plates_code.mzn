int: temp = length(fixed_plates);

array [int] of int: fixed_plates = [381, 71, 592, 283, 559, 615, 467, 655, 528, 673, 564, 33, 165, 661, 516, 249, 629, 577, 350, 673, 326, 552, 23, 623, 175, 253, 139, 668, 87, 167, 160, 80, 352, 378, 652, 48, 128, 18, 673, 106, 373, 673, 335, 181, 185, 93, 134, 39, 91, 75, 673, 24, 376, 176, 135, 84, 433, 121, 328, 673, 158, 44, 529, 191, 657, 514, 664, 282, 35, 182, 101, 333, 178, 568, 470, 579, 649, 515, 673, 558, 275, 17, 141, 590, 616, 631, 104, 621, 346, 187, 325, 651, 543, 534, 549, 673, 673, 434, 192, 108, 162, 82, 314, 551, 653, 324, 513, 471, 647, 122, 565, 34, 673, 97, 79, 72, 524, 154, 92, 530, 370, 553, 656, 140, 332, 673, 435, 539, 585, 96, 313, 65, 351, 284, 45, 644, 276, 252, 170, 548, 673, 583, 105, 377, 103, 673, 127, 131, 250, 285, 81, 280, 166, 527, 673, 610, 533, 369, 379, 582, 70, 619, 315, 541, 138, 648, 627, 667, 107, 316, 277, 173, 183, 78, 662, 620, 665, 153, 46, 625, 537, 586, 554, 521, 129, 562, 469, 331, 673, 613, 673, 437, 472, 609, 535, 566, 545, 673, 164, 673, 319, 519, 556, 618, 281, 68, 174, 587, 383, 89, 159, 526, 256, 666, 180, 663, 66, 538, 20, 624, 589, 136, 643, 567, 614, 660, 531, 177, 73, 673, 522, 673, 578, 171, 37, 632, 157, 110, 557, 466, 525, 642, 375, 673, 440, 536, 76, 90, 327, 186, 123, 98, 547, 273, 670, 130, 168, 142, 673, 86, 520, 465, 329, 345, 144, 617, 546, 43, 628, 38, 518, 348, 673, 172, 641, 584, 673, 612, 163, 560, 669, 438, 22, 77, 588, 544, 563, 99, 658, 155, 581, 372, 673, 42, 626, 334, 542, 100, 109, 532, 190, 436, 19, 673, 323, 69, 184, 318, 672, 137, 380, 125, 274, 102, 650, 523, 94, 21, 189, 156, 112, 645, 287, 382, 254, 673, 374, 561, 320, 47, 124, 555, 74, 673, 468, 88, 126, 133, 349, 550, 580, 659, 321, 255, 36, 330, 630, 673, 85, 161, 317, 611, 143, 591, 673, 279, 288, 622, 646, 371, 40, 673, 67, 673, 540, 347, 286, 188, 384, 251, 179, 336, 517, 322, 95, 83, 111, 671, 41, 654, 132, 439, 278, 169, 243, 213, 642, 261, 449, 49, 429, 298, 152, 116, 478, 646, 267, 421, 223, 356, 1, 673, 60, 407, 198, 240, 366, 673, 489, 673, 220, 206, 633, 499, 603, 3, 388, 673, 412, 52, 199, 397, 575, 227, 649, 423, 216, 262, 146, 484, 652, 302, 420, 360, 448, 292, 643, 450, 402, 59, 664, 497, 363, 390, 2, 25, 673, 9, 459, 51, 410, 231, 479, 673, 235, 241, 230, 62, 16, 600, 607, 656, 574, 636, 462, 245, 264, 665, 218, 510, 290, 200, 432, 115, 485, 673, 494, 338, 503, 673, 509, 405, 56, 671, 305, 301, 673, 444, 573, 27, 237, 599, 458, 340, 650, 212, 265, 673, 431, 393, 207, 358, 605, 228, 476, 504, 246, 446, 673, 5, 10, 662, 640, 593, 483, 411, 673, 386, 453, 205, 496, 506, 32, 291, 661, 307, 339, 266, 673, 387, 310, 464, 201, 505, 289, 417, 404, 354, 673, 608, 477, 576, 269, 667, 149, 260, 597, 120, 637, 396, 647, 367, 400, 113, 673, 236, 224, 28, 368, 673, 344, 428, 297, 490, 414, 672, 193, 443, 482, 14, 669, 150, 63, 456, 211, 306, 663, 30, 395, 389, 209, 194, 204, 357, 238, 271, 463, 673, 61, 7, 258, 451, 226, 641, 247, 343, 673, 54, 445, 118, 11, 195, 268, 337, 232, 364, 655, 214, 673, 217, 58, 422, 442, 594, 53, 673, 602, 399, 666, 239, 385, 296, 403, 638, 148, 658, 571, 244, 673, 359, 229, 257, 309, 415, 4, 208, 408, 673, 299, 493, 598, 57, 511, 668, 601, 635, 460, 215, 673, 474, 225, 406, 487, 222, 398, 50, 8, 151, 670, 430, 659, 441, 242, 457, 392, 203, 259, 304, 673, 31, 15, 502, 196, 595, 64, 452, 480, 660, 512, 426, 295, 648, 210, 119, 495, 409, 606, 145, 634, 353, 673, 12, 419, 361, 673, 29, 447, 272, 461, 508, 342, 570, 491, 117, 645, 481, 673, 263, 294, 248, 473, 413, 673, 6, 362, 498, 455, 651, 308, 233, 26, 341, 657, 416, 492, 311, 197, 673, 604, 639, 418, 147, 507, 501, 673, 300, 55, 425, 219, 569, 488, 391, 596, 653, 270, 13, 365, 673, 303, 673, 486, 293, 454, 234, 394, 500, 644, 475, 401, 654, 114, 312, 424, 427, 221, 202, 572, 355];

%% int: experiments = compounds*max_compound_concentrations*replicates;  %% For only the 2 first plates!
int: max_experiments = 40*8*2;

constraint forall(i in Plates,j in Rows, k in Columns)(
  if (i-1)*num_rows*num_cols+(j-1)*num_cols+k <= temp then
    if fixed_plates[(i-1)*num_rows*num_cols+(j-1)*num_cols+k] <= max_experiments then
      plates[i,j,k] = fixed_plates[(i-1)*num_rows*num_cols+(j-1)*num_cols+k]
    else 
      plates[i,j,k] = fixed_plates[(i-1)*num_rows*num_cols+(j-1)*num_cols+k] - max_experiments + experiments
  endif endif);
  
  
